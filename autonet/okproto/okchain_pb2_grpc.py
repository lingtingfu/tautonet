# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import okchain_pb2 as okchain__pb2


class PeerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Chat = channel.stream_stream(
        '/protos.Peer/Chat',
        request_serializer=okchain__pb2.Message.SerializeToString,
        response_deserializer=okchain__pb2.Message.FromString,
        )


class PeerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Chat(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PeerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Chat': grpc.stream_stream_rpc_method_handler(
          servicer.Chat,
          request_deserializer=okchain__pb2.Message.FromString,
          response_serializer=okchain__pb2.Message.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'protos.Peer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
